{"version":3,"sources":["components/Filter.js","services/person.js","components/Notification.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["Filter","persons","setPersons","useState","query","setQuery","type","value","onChange","event","target","queryPersons","filter","person","name","toLowerCase","includes","apiUrl","axios","get","then","response","data","contact","post","id","delete","newContact","put","NotificationType","Notification","notificacion","className","message","PersonForm","newName","newNumber","setNewName","setNewNumber","setMessage","onSubmit","preventDefault","duplicated","find","window","confirm","personService","number","console","log","map","concat","setTimeout","e","Persons","onClick","catch","error","deletePerson","App","notification","setNotification","useEffect","contacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAqBeA,MAnBf,YAAwC,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,WAAa,EACVC,mBAAS,IADC,mBAC9BC,EAD8B,KACvBC,EADuB,KAYnC,OACI,sDACuB,uBAAOC,KAAK,OAAOC,MAAOH,EAAOI,SAXtC,SAAAC,GAElBJ,EAASI,EAAMC,OAAOH,OACtB,IAAII,EAAeV,EAAQW,QAAO,SAAAC,GAChC,OAAOA,EAAOC,KAAKC,cAAcC,SAASZ,EAAMW,kBAElDb,EAAWS,U,uBCTbM,EAAS,eAuBA,EArBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB9B,EAhBA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAAQM,GACpBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc9B,EAXM,SAACG,GAElB,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA0BQ,IAC3BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS9B,EANA,SAACG,EAAIE,GAEhB,OADiBT,IAAMU,IAAN,UAAaX,EAAb,YAAuBQ,GAAME,GAC9BP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,MCTvC,IAAMO,EACF,QADEA,EAEA,UAGEC,EAdf,YAAuC,IAAhBC,EAAe,EAAfA,aACnB,OAAoB,OAAjBA,EAA+B,KAE9B,qBAAKC,UAAS,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAczB,KAA9B,gBACKyB,QADL,IACKA,OADL,EACKA,EAAcE,WC8CZC,MAhDf,YAAsG,IAAjFC,EAAgF,EAAhFA,QAASC,EAAuE,EAAvEA,UAAWC,EAA4D,EAA5DA,WAAYC,EAAgD,EAAhDA,aAAcpC,EAAkC,EAAlCA,WAAYD,EAAsB,EAAtBA,QAASsC,EAAa,EAAbA,WA8BpF,OACI,8BACI,uBAAMC,SA/BM,SAAC/B,GACjBA,EAAMgC,iBAEN,IAAMC,EAAazC,EAAQ0C,MAAK,SAAA9B,GAAM,OAAIA,EAAOC,OAASqB,KACtDO,EACIE,OAAOC,QAAP,UAAkBV,EAAlB,2EAEAW,EAAqBJ,EAAWjB,GAAhC,2BAAwCiB,GAAxC,IAAoDK,OAAOX,KAC1DhB,MAAK,SAAAC,GACF2B,QAAQC,IAAI5B,GACZnB,EAAWD,EAAQiD,KAAI,SAAArC,GAAM,OAAIA,EAAOY,KAAOJ,EAASI,GAAKZ,EAASQ,SAMhFyB,EAAqB,CAAChC,KAAMqB,EAASY,OAAQX,IAC5ChB,MAAK,SAAAO,GACFzB,EAAWD,EAAQkD,OAAOxB,IAC1BY,EAAW,CAACN,QAAQ,SAAD,OAAWE,GAAW7B,KAAMuB,IAC/CuB,YAAW,WACTb,EAAW,QACV,QAGTF,EAAW,IACXC,EAAa,KAKT,UACI,2CACA,yCACU,uBAAO/B,MAAO4B,EAAS3B,SAAU,SAACC,GAAD,OAAW4B,EAAW5B,EAAMC,OAAOH,aAE9E,2CACY,uBAAOA,MAAO6B,EAAW5B,SAAU,SAAC6C,GAAD,OAAOf,EAAae,EAAE3C,OAAOH,aAE5E,8BACI,wBAAQD,KAAK,SAAb,yBCVLgD,MAhCf,YAAqD,IAAnCrD,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,WAAYqC,EAAa,EAAbA,WAmBnC,OACI,8BACKtC,EAAQiD,KAAI,SAAArC,GAAM,OACf,gCACCA,EAAOC,KADR,KACgBD,EAAOkC,OACvB,wBAAQQ,QAAS,kBAtBR,SAAC9B,GAClB,IAAMZ,EAASZ,EAAQ0C,MAAK,SAAA9B,GAAM,OAAIA,EAAOY,KAAOA,KAChDZ,GAAU+B,OAAOC,QAAP,iBAAyBhC,EAAOC,QAC1CgC,EAA2BrB,GAC1BL,MAAK,SAAAC,GACFnB,EAAWD,EAAQW,QAAO,SAAAC,GAAM,OAAIA,EAAOY,KAAOA,SAErD+B,OAAM,SAAAC,GACHlB,EAAW,CAACN,QAAQ,kBAAD,OAAmBpB,EAAOC,KAA1B,yCAAuER,KAAMuB,IAChG3B,EAAWD,EAAQW,QAAO,SAAAC,GAAM,OAAIA,EAAOY,KAAOA,MAClD2B,YAAW,WACPb,EAAW,QACZ,QAUkBmB,CAAa7C,EAAOY,KAAzC,6BCcDkC,EAnCH,WAAO,IAAD,EACgBxD,mBAAS,IADzB,mBACRF,EADQ,KACCC,EADD,OAEgBC,mBAAS,IAFzB,mBAERgC,EAFQ,KAECE,EAFD,OAGkBlC,mBAAS,IAH3B,mBAGTiC,EAHS,KAGEE,EAHF,OAIwBnC,mBAAS,MAJjC,mBAITyD,EAJS,KAIKC,EAJL,KAchB,OAPAC,qBAAU,WACRhB,IACC1B,MAAK,SAAA2C,GACJ7D,EAAW6D,QAEZ,IAGD,gCACE,2CACA,cAAC,EAAD,CAAchC,aAAc6B,IAC5B,cAAC,EAAD,CAAQ3D,QAAUA,EAASC,WAAYA,IACvC,cAAC,EAAD,CACEiC,QAASA,EACTC,UAAWA,EACXC,WAAYA,EACZC,aAAcA,EACdrC,QAASA,EACTC,WAAaA,EACbqC,WAAcsB,IAGhB,yCACI,cAAC,EAAD,CAAS5D,QAASA,EAASC,WAAYA,EAAYqC,WAAYsB,QCjCzEG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b52fcd1a.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction Filter({persons, setPersons}) {\r\n  const [query, setQuery ] = useState('');\r\n\r\n    const filterHandler = event => {\r\n        //event.preventDefault();\r\n        setQuery(event.target.value);\r\n        let queryPersons = persons.filter(person => {\r\n          return person.name.toLowerCase().includes(query.toLowerCase()); \r\n        })\r\n        setPersons(queryPersons)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            filter shown with: <input type=\"text\" value={query} onChange={filterHandler}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import axios from 'axios'\r\n\r\nconst apiUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(apiUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (contact) => {\r\n    const request = axios.post(apiUrl, contact)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${apiUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newContact) => {\r\n    const response = axios.put(`${apiUrl}/${id}`, newContact)\r\n    return response.then(response => response.data)\r\n}\r\n\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    deletePerson,\r\n    update\r\n}","import React from 'react'\r\nimport '../index.css';\r\n\r\nfunction Notification({notificacion}) {\r\n    if(notificacion === null) {return null}\r\n    return (\r\n        <div className={notificacion?.type}>\r\n            {notificacion?.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const NotificationType = {\r\n    error: 'error',\r\n    success: 'success'\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react';\r\nimport person from '../services/person';\r\nimport personService from '../services/person'\r\nimport { NotificationType } from './Notification';\r\n\r\nfunction PersonForm({newName, newNumber, setNewName, setNewNumber, setPersons, persons, setMessage}) {\r\n    const saveContact = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const duplicated = persons.find(person => person.name === newName)\r\n        if (duplicated){\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)){\r\n\r\n                personService.update(duplicated.id, {...duplicated, number:newNumber})\r\n                .then(response => {\r\n                    console.log(response)\r\n                    setPersons(persons.map(person => person.id !== response.id ? person : response))\r\n                })\r\n            }\r\n          //alert(`${newName} is already in your phonebook`);\r\n        }\r\n        else {\r\n          personService.create({name: newName, number: newNumber})\r\n          .then(newContact => {\r\n              setPersons(persons.concat(newContact))\r\n              setMessage({message: `Added ${newName}`, type: NotificationType.success})\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 5000);\r\n          })     \r\n        }\r\n        setNewName('');\r\n        setNewNumber('');\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={saveContact}>\r\n                <h2>add a new</h2>\r\n                <div>\r\n                    name: <input value={newName} onChange={(event) => setNewName(event.target.value)} />\r\n                </div>\r\n                <div>\r\n                    number: <input value={newNumber} onChange={(e) => setNewNumber(e.target.value)}/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\nimport personService from '../services/person'\r\nimport { NotificationType } from './Notification'\r\n\r\nfunction Persons({persons, setPersons, setMessage}) {\r\n\r\n    const deletePerson = (id) => {\r\n        const person = persons.find(person => person.id === id)\r\n        if (person && window.confirm(`Delete ${person.name}`)){\r\n            personService.deletePerson(id)\r\n            .then(response => {\r\n                setPersons(persons.filter(person => person.id !== id ))\r\n            })\r\n            .catch(error => {\r\n                setMessage({message:`Information of ${person.name} has already been removed from server`, type: NotificationType.error})\r\n                setPersons(persons.filter(person => person.id !== id))\r\n                setTimeout(() => {\r\n                    setMessage(null)\r\n                }, 5000);\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {persons.map(person => (\r\n                <div>\r\n                {person.name}: {person.number}\r\n                <button onClick={()=>deletePerson(person.id)}>Delete</button>\r\n                </div>\r\n\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React, { useState, useEffect} from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/person'\nimport Notification, {NotificationType} from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [notification, setNotification] = useState(null)\n  const url = \"http://localhost:3002/persons\"\n\n  useEffect(() => {\n    personService.getAll()\n    .then(contacts => {\n      setPersons(contacts)\n    })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notificacion={notification} />\n      <Filter persons ={persons} setPersons={setPersons}/>\n      <PersonForm \n        newName={newName} \n        newNumber={newNumber} \n        setNewName={setNewName} \n        setNewNumber={setNewNumber}\n        persons={persons}\n        setPersons ={setPersons}\n        setMessage = {setNotification}\n        />\n      \n      <h2>Numbers</h2>\n          <Persons persons={persons} setPersons={setPersons} setMessage={setNotification}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}